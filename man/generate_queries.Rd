% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_queries.R
\name{generate_queries}
\alias{generate_queries}
\title{Generate data validation queries for a REDCap project based on branching
logic specified in the project codebook}
\usage{
generate_queries(conn, forms = NULL, query_types = "both", on_error = "warn")
}
\arguments{
\item{conn}{A REDCap API connection object (created with \code{\link{rconn}})}

\item{forms}{Character vector of forms (i.e. instruments) to include. Set to
\code{NULL} (the default) to generate queries for all forms in the project.}

\item{query_types}{Which type of queries to generate (see \strong{Description}
above). Options are "missing", "not missing", or "both". Defaults to
"both".}

\item{on_error}{What to do if one or more elements of statements can't be
translated into valid R expressions? Options are "ignore" (return \code{NA} for
relevant elements), "warn" (return \code{NA} for relevant elements and give
warning), or "fail" (throw error). Defaults to "warn".}
}
\value{
A \code{\link[tibble:tbl_df-class]{tibble}}-style data frame specifying queries, with the
following 7 columns:

\describe{
\item{query_id}{Unique query identifier based on form name and integer sequence}
\item{field_name}{Field name (from REDCap dictionary, see \code{\link{meta_dictionary}})}
\item{form_name}{Form name (from REDCap dictionary)}
\item{required}{Is it a required field in REDCap dictionary ("y" or \verb{<NA>}) ?}
\item{description}{Description of query (e.g. "Missing: [Signed consent forms?]")}
\item{suggestion}{Suggestion for query resolution. A human-readable
translation of query expression (e.g. If [Is the participant 18 years or
older?] is "Yes", item [Signed consent forms?] should not be missing)}
\item{branching_logic}{Branching logic for given field (from REDCap dictionary)}
\item{query}{R-style query expression (can be evaluated with \code{\link[queryr:query]{queryr::query}})}
}
}
\description{
Generates two types of data validation queries using the project codebook
(see \code{\link{meta_dictionary}}) and \code{\link{translate_logic}}:
\enumerate{
\item \strong{Field missing}: Branching logic evaluates to \code{TRUE} (if specified), but
field is missing. Only applies to required fields (\code{required_field == "y"}).
\item \strong{Field not missing}: Branching logic evaluates to \code{FALSE} but field is
not missing. Applies to any field with branching logic.
}
}
