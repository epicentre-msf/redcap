% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_records.R
\name{fetch_records}
\alias{fetch_records}
\title{Fetch records for a REDCap project}
\usage{
fetch_records(
  conn,
  forms = NULL,
  events = NULL,
  records = NULL,
  fields = NULL,
  id_field = TRUE,
  rm_empty = TRUE,
  value_labs = TRUE,
  header_labs = FALSE,
  checkbox_labs = FALSE,
  use_factors = FALSE,
  na = c("", "NA"),
  dag = TRUE,
  double_resolve = FALSE,
  double_sep = "--"
)
}
\arguments{
\item{conn}{A REDCap API connection object (created with \code{\link{rconn}})}

\item{forms}{Character vector of forms (i.e. instruments) to fetch data for.
Set to \code{NULL} (the default) to fetch all forms in the project.}

\item{events}{Character vector of events to fetch. Must correspond to the
selected \code{forms}. Set to \code{NULL} (the default) to fetch all events
corresponding to the selected form(s).}

\item{records}{Character vector of record IDs to fetch. Set to \code{NULL} (the
default) to fetch all record IDs corresponding to the selected form(s).}

\item{fields}{Character vector of fields (i.e. variables) to fetch. Set to
\code{NULL} (the default) to fetch all fields corresponding to the selected
form(s).}

\item{id_field}{Logical indicating whether to always include the 'record ID'
field (defined in REDCap to be the first variable in the project codebook)
in the API request, even if it's not specified in argument \code{fields}.
Defaults to \code{TRUE}.

The record ID field is defined within the first form of a REDCap project,
and so API requests for other forms will not include the record ID field by
default (unless it's explicitly requested with argument \code{fields}). The
\code{id_field} argument is a shortcut to avoid having to always explicitly
request the record ID field.}

\item{rm_empty}{Logical indicating whether to remove rows for which all
fields from the relevant form(s) are missing. See section \strong{Removing empty
rows}. Defaults to \code{TRUE}.}

\item{value_labs}{Logical indicating whether to return value labels (\code{TRUE})
or raw values (\code{FALSE}) for categorical REDCap variables (radio, dropdown,
yesno, checkbox). Defaults to \code{TRUE} to return labels.}

\item{header_labs}{Logical indicating whether to export column names as
labels (\code{TRUE}) or raw variable names (\code{FALSE}). Defaults to \code{FALSE} to
return raw variable names.}

\item{checkbox_labs}{Logical indicating whether to export checkbox labels
(\code{TRUE}) or statuses (i.e. "Unchecked" or "Checked") (\code{FALSE}). Defaults to
\code{FALSE} to export statuses. Note this argument is only relevant when
\code{value_labs} is \code{TRUE} — if \code{value_labs} is \code{FALSE} checkbox variables will
always be exported as raw values (usually "0"/"1").}

\item{use_factors}{Logical indicating whether categorical REDCap variables
(radio, dropdown, yesno, checkbox) should be returned as factors. Factor
levels can either be raw values (e.g. "0"/"1") or labels (e.g. "No"/"Yes")
depending on arguments \code{value_labs} and \code{checkbox_labs}. Defaults to
\code{FALSE}.}

\item{na}{Character vector of strings to interpret as missing values. Passed
to \link[readr:read_delim]{readr::read_csv}. Defaults to \code{c("", "NA")}.}

\item{dag}{Logical indicating whether to export the
\code{redcap_data_access_group} field (if used in the project). Defaults to
\code{TRUE}.}

\item{double_resolve}{Logical indicating whether to resolve double-entries
(i.e. records entered in duplicate using REDCap's Double Data Entry
module), by filtering to the lowest entry number associated with each
unique record.

If a project uses double-entry, the record IDs returned by an "Export
Records" API request will be a concatenation of the normal record ID and
the entry number (1 or 2), normally separated by "--" (e.g. "P0285--1"). To
resolve double entries we move the entry number portion of the ID to its
own column (\code{entry}), identify all entries belonging to the same unique
record, and retain only the row with the lowest entry number for each
unique record.

Unique records are identified using the record ID column (after separating
the entry number portion), and any of the following columns when present
(accounting for argument \code{header_labs}): redcap_event_name (Redcap Event),
redcap_repeat_instrument (Repeat Instrument), redcap_repeat_instance
(Repeat Instance).}

\item{double_sep}{If \code{double_resolve} is \code{TRUE}, the string separator used to
split the record ID field into the record ID and entry number. Defaults to
"--".}
}
\value{
A \code{\link[tibble:tbl_df-class]{tibble}}-style data frame containing the requested
records
}
\description{
Execute an "Export Records" API request to fetch a
\code{\link[tibble:tbl_df-class]{tibble}}-style data frame containing records for one or
more REDCap instruments.
}
\section{Removing empty rows}{

Depending on the database design, an "Export Records" API request can
sometimes return empty rows, representing forms for which no data has been
collected. For example, if forms \strong{F1} and \strong{F2} are part of the same
event, and participant "P001" has form data for \strong{F2} but not \strong{F1}, an API
request for \strong{F1} will include a row for participant "P001" where all
\strong{F1}-specific fields are empty.

If argument \code{rm_empty} is \code{TRUE} (the default), \code{fetch_records()} will filter
out such rows. The check for empty rows is based only on fields that are
specific to the form(s) specified in argument \code{forms} — i.e. it excludes the
record ID field, and generic fields like \code{redcap_event_name},
\code{redcap_data_access_group}, etc. The check for empty rows also accounts for
checkbox fields, which, if argument \code{checkbox_labs} is \code{FALSE}, will be set
to "Unchecked" in an empty form (rather than missing per se).
}

\examples{
\dontrun{
conn <- rconn(
  url = "https://redcap.msf.fr/api/",
  token = Sys.getenv("MY_REDCAP_TOKEN")
)

fetch_records(conn, forms = "my_form")
}

}
